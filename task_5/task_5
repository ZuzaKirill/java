/*	
task_5:
Создать приложение с 3 потоками для следующей задачи: 
    3 работника выполняют следующую работу: 
        1-ый копает яму, 
        2-ой сажает дерево,  
        3-ий подвязывает саженец к кольям. 
    Работа идет строго по очереди. Число саженцев задается параметром.  
    Выводить на дисплей номер работника и номер саженца. 
 */
package task_5;

public class task_5 implements Runnable{
    static Drip drip;
   
    public static void main(String[] args) {
        int number_of_employees;
        Runnable employees;
        Thread first, second, third;
        
        number_of_employees = 3;//Integer.parseInt(args[0]);
        drip = new Drip(number_of_employees);
        employees = new task_5();
        
        first = new Thread(employees);
        second = new Thread(employees);
        third = new Thread(employees);

        first.setName("first");
        second.setName("second");
        third.setName("third");

        first.start();
        second.start();
        third.start();
    }

    @Override
    public void run() {
        String employee_name = Thread.currentThread().getName();

        while (true) { 
            synchronized(this) {
                if (drip.getCurrent() > drip.getCount()) {
                        return;
                }

                if (employee_name.equals("first") && (work.getemployee() == 1)) {
                    System.out.println(drip.getemployee() + " " + drip.getCurrent());
                    work.setemployee(2);
                } else if (employee_name.equals("second") && (drip.getemployee() == 2)) {
                    System.out.println(drip.getemployee() + " " + drip.getCurrent());
                    drip.setemployee(3);
                } else if (employee_name.equals("third") && (drip.getemployee() == 3)) {
                    System.out.println(drip.getemployee() + " " + drip.getCurrent() + "\n---");
                   drip.setemployee(1);
                   drip.setCurrent(drip.getCurrent() + 1);                    
                }
            }     
        }
    }
}
